/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Barcode {
    pub barcode_type: *mut ::std::os::raw::c_char,
    pub barcode_value: *mut ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_Barcode() {
    assert_eq!(
        ::std::mem::size_of::<Barcode>(),
        16usize,
        concat!("Size of: ", stringify!(Barcode))
    );
    assert_eq!(
        ::std::mem::align_of::<Barcode>(),
        8usize,
        concat!("Alignment of ", stringify!(Barcode))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Barcode>())).barcode_type as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(Barcode),
            "::",
            stringify!(barcode_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<Barcode>())).barcode_value as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(Barcode),
            "::",
            stringify!(barcode_value)
        )
    );
}
pub type RustCallback = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: i32,
        arg2: *const ::std::os::raw::c_char,
        arg3: *const ::std::os::raw::c_char,
    ),
>;
extern "C" {
    pub fn register_callback(callback: RustCallback) -> i32;
}
extern "C" {
    pub fn c_decodeFile(
        fileName: *const ::std::os::raw::c_char,
        pszLicense: *const ::std::os::raw::c_char,
    );
}
